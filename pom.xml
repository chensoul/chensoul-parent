<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.chensoul</groupId>
    <artifactId>chensoul-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.4.0-SNAPSHOT</version>

    <name>chensoul-parent</name>
    <description>chensoul-parent</description>
    <url>https://github.com/chensoul/chensoul-parent</url>

    <scm>
        <connection>scm:git:https://github.com/chensoul/chensoul-parent.git</connection>
        <developerConnection>scm:git:git@github.com:chensoul/chensoul-parent.git</developerConnection>
        <url>https://github.com/chensoul/chensoul-parent</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/chensoul/chensoul-parent/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/chensoul/chensoul-parent/actions</url>
    </ciManagement>

    <licenses>
        <license>
            <name>Apache License, version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>ChenSoul</name>
        <url>https://blog.chensoul.cc</url>
    </organization>
    <developers>
        <developer>
            <id>chensoul</id>
            <name>chensoul</name>
            <email>ichensoul@gmail.com</email>
            <url>https://blog.chensoul.cc</url>
            <roles>
                <role>developer</role>
            </roles>
            <organization>ChenSoul</organization>
            <organizationUrl>https://blog.chensoul.cc/</organizationUrl>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>

        <!-- Plugin versions -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
        <maven-failsafe-plugin.version>3.5.1</maven-failsafe-plugin.version>
        <maven-javadoc-plugin.version>3.11.1</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>

        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>
        <sonar-maven-plugin.version>5.0.0.4389</sonar-maven-plugin.version>
        <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>

        <jacoco.minimum.coverage>0.80</jacoco.minimum.coverage>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.commonjava.maven.plugins</groupId>
                <artifactId>directory-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <quiet>true</quiet>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <version>1.0</version>
                    <executions>
                        <execution>
                            <id>set-root-dir-for-common-lifecycle</id>
                            <goals>
                                <goal>highest-basedir</goal>
                            </goals>
                            <phase>initialize</phase>
                            <configuration>
                                <property>project.rootdir</property>
                            </configuration>
                        </execution>
                        <execution>
                            <id>set-root-dir-for-clean-lifecycle</id>
                            <goals>
                                <goal>highest-basedir</goal>
                            </goals>
                            <phase>pre-clean</phase>
                            <configuration>
                                <property>project.rootdir</property>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <runOrder>alphabetical</runOrder>
                        <includes>
                            <include>**/*Tests.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/*IT*</exclude>
                            <exclude>**/*IntTest*</exclude>
                            <exclude>**/*IntegrationTest*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <runOrder>alphabetical</runOrder>
                        <includes>
                            <include>**/*IT*</include>
                            <include>**/*IntTest*</include>
                            <include>**/*IntegrationTest*</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <configuration>
                        <rules>
                            <rule>
                                <element>BUNDLE</element>
                                <limits>
                                    <limit>
                                        <counter>COMPLEXITY</counter>
                                        <value>COVEREDRATIO</value>
                                        <minimum>${jacoco.minimum.coverage}</minimum>
                                    </limit>
                                </limits>
                            </rule>
                        </rules>
                        <excludes>
                            <exclude>**/exception/*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-tests</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
                        <execution>
                            <id>post-integration-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless-maven-plugin.version}</version>
                    <configuration>
                        <java>
                            <palantirJavaFormat>
                                <version>2.50.0</version>
                            </palantirJavaFormat>
                            <importOrder/>
                            <removeUnusedImports/>
                            <formatAnnotations/>
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spotless</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${project.rootdir}/sonar-project.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>sonar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>springboot</id>
            <activation>
                <file>
                    <!-- Just a way to identify a Spring Boot application -->
                    <exists>src/main/resources/application.yml</exists>
                </file>
            </activation>
            <properties>
                <spring-boot.version>3.3.5</spring-boot.version>
                <git-commit-id-maven-plugin.version>9.0.1</git-commit-id-maven-plugin.version>
                <jib-maven-plugin.version>3.4.4</jib-maven-plugin.version>

                <maven.deploy.skip>true</maven.deploy.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.github.git-commit-id</groupId>
                        <artifactId>git-commit-id-maven-plugin</artifactId>
                        <version>${git-commit-id-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                            <failOnNoGitDirectory>false</failOnNoGitDirectory>
                            <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <includeOnlyProperties>
                                <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                                <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                                <includeOnlyProperty>^git.commit.user.name$</includeOnlyProperty>
                                <includeOnlyProperty>^git.commit.message.full$</includeOnlyProperty>
                            </includeOnlyProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${jib-maven-plugin.version}</version>
                        <configuration>
                            <to>
                                <image>${env.USER}/${project.artifactId}</image>
                            </to>
                            <from>
                                <image>eclipse-temurin:21-jre</image>
                            </from>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>flatten-pom</id>
            <properties>
                <flatten.maven.plugin.version>1.1.0</flatten.maven.plugin.version>
            </properties>
            <!-- It should be used for product releases. -->
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>flatten-maven-plugin</artifactId>
                            <version>${flatten.maven.plugin.version}</version>
                            <inherited>true</inherited>
                            <executions>
                                <execution>
                                    <!-- Flatten and simplify our own POM for install/deploy -->
                                    <id>flatten</id>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>flatten</goal>
                                    </goals>
                                    <configuration>
                                        <updatePomFile>true</updatePomFile>
                                        <pomElements>
                                            <parent>expand</parent>
                                            <name>keep</name>
                                            <description>keep</description>
                                            <url>keep</url>
                                            <properties>keep</properties>
                                            <pluginManagement>keep</pluginManagement>
                                            <dependencyManagement>keep</dependencyManagement>
                                            <build>keep</build>
                                        </pomElements>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>flatten-clean</id>
                                    <phase>clean</phase>
                                    <goals>
                                        <goal>clean</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <properties>
                <maven.enforcer.plugin.version>3.0.0</maven.enforcer.plugin.version>
                <nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
                <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>
                <staging.timeout.minutes>5</staging.timeout.minutes>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <!--  https://www.sonatype.com/blog/2010/01/how-to-generate-pgp-signatures-with-maven -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>${nexus-staging-maven-plugin.version}</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <stagingProgressTimeoutMinutes>${staging.timeout.minutes}</stagingProgressTimeoutMinutes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
        </profile>

        <profile>
            <id>sonar-cloud</id>
            <properties>
                <sonar.java.source>${maven.compiler.source}</sonar.java.source>
                <sonar.organization>chensoul</sonar.organization>
                <sonar.host.url>https://sonarcloud.io</sonar.host.url>
            </properties>
        </profile>

        <profile>
            <id>apicmp</id>
            <properties>
                <japicmp.maven.plugin.version>0.16.0</japicmp.maven.plugin.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.siom79.japicmp</groupId>
                        <artifactId>japicmp-maven-plugin</artifactId>
                        <version>${japicmp.maven.plugin.version}</version>
                        <configuration>
                            <oldVersion>
                                <dependency>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <!--  Needs to be passed as a property via command line e.g. -->
                                    <version>${api.reference.version}</version>
                                    <type>jar</type>
                                </dependency>
                            </oldVersion>
                            <newVersion>
                                <file>
                                    <path>
                                        ${project.build.directory}/${project.artifactId}-${project.version}.${project.packaging}
                                    </path>
                                </file>
                            </newVersion>
                            <parameter>
                                <ignoreMissingClasses>true</ignoreMissingClasses>
                                <onlyModified>true</onlyModified>
                                <skipDiffReport>true</skipDiffReport>
                                <skipXmlReport>true</skipXmlReport>
                                <ignoreMissingOldVersion>true</ignoreMissingOldVersion>
                                <ignoreMissingNewVersion>true</ignoreMissingNewVersion>
                            </parameter>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>cmp</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>
